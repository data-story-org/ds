#!/bin/bash

#############################################################
# MAKE A CONFIG FILE IF YOU DONT WANT THE DEFAULTS
#############################################################

if test -f .config
then
	source .config
else
  CODE_PATH=$HOME/Code
	YARN_LINK_PATH=$HOME/.config/yarn/link/@data-story-org
fi

#############################################################
# HELPERS
#############################################################
CURRENT_PWD=`pwd`

remove_repo() {
	rm -rf $CODE_PATH/$1
	rm -rf $YARN_LINK_PATH/$1

	echo ✅ Removed $1
}

install_repo() {
	INSTALL_PATH=$CODE_PATH/$1
	git clone git@github.com:data-story-org/$1.git $INSTALL_PATH

	cd $CODE_PATH/$1
	yarn link
	cd $CURRENT_PWD

	echo ✅ Cloned $1 into $INSTALL_PATH
}

wipe() {
	remove_repo core
	remove_repo gui
}

install_core() {
	install_repo core

	cd $CODE_PATH/core
	yarn link
	yarn
	yarn build
	cd $CURRENT_PWD
}

install_gui() {
	install_repo gui

	cd $CODE_PATH/gui
	yarn link
	yarn link @data-story-org/core	
	yarn
	yarn dev
	cd $CURRENT_PWD
}

install() {
	install_core
	install_gui
}

echo_core_status() {
	cd $CODE_PATH/core
	GIT_STATUS=$(git status 2>&1)
	
	LINKED=$(find -L $(find node_modules -type l) -type d -prune)

	echo "######################" CORE "######################"
	echo $GIT_STATUS
	echo $LINKED

	cd $CURRENT_PWD	
}

echo_gui_status() {
	cd $CODE_PATH/gui
	GIT_STATUS=$(git status 2>&1)	
	LINKED=$(find -L $(find node_modules -type l -name core) -type d -prune)

	echo "######################" GUI "######################"
	echo $GIT_STATUS
	echo Linked dependencies: $LINKED

	cd $CURRENT_PWD	
}

status() {
	echo_core_status
	echo_gui_status
}

help() {
	echo "Usage: (ds wipe | ds install)"
}

###################################################
# MAIN ENTRY POINT
###################################################
case "$1"
	in
	status|s) status ;;
	install|i) install ;;
	wipe|w) wipe ;;
 	*) help ;;
esac

cd $CURRENT_PWD
exit 0